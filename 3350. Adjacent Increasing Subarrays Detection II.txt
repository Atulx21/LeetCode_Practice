class Solution {
public:
    int maxIncreasingSubarrays(vector<int>& nums) {
        int n = nums.size();
        int curr = 1;
        int prev = 0;
        int maxx = 0;
        for (int i = 1; i < n; i++) {
            if (nums[i] > nums[i - 1]) {
                curr++;
            } else {
                int half = curr / 2;
                if (half > maxx) maxx = half;

                int minn = min(prev , curr); 
                if (minn > maxx) maxx = minn;

                prev = curr;
                curr = 1;
            }
        }
        int half = curr / 2;
        if (half > maxx) maxx = half;

        int minn = min(prev , curr);
        if (minn > maxx) maxx = minn;

        return maxx;
    }
};




Example 1:
Input: nums = [2,5,7,8,9,2,3,4,3,1]
Output: 3

Example 2:
Input: nums = [1,2,3,4,4,4,4,5,6,7]
Output: 2